# Environment variables:
#
#   APP_ADDR - IP Address for our host (here we need to ensure the Weave NIC is used!)
#   ETCD_URL - URL pointing to our compute nodes etcd service
#Â   JOURNAL  - IP Address for our Cassandra journal node
#   ROLES    - comma separated list of strings that describe the roles that this actor system possesses
#   SNAPSHOT - IP Address for our Cassandra snapshot node

# Logging knobs - twiddle to set appropriately
logging {
  level = DEBUG

  # Log dead letters
  dead-letters = on

  # Log all LoggingFSMs for events, transitions and timers (using akka.actor.LoggingFSM[StateType, Data])
  fsm = on

  # Logging of message invocations on certain (local) actors (using akka.event.LoggingReceive)
  receive = on

  # Log unhandled actor messages
  unhandled = on

  # Log cluster informational messages
  cluster = on

  # Log all inbound and outbound messages to remote actors
  remote = off
}

akka {
  loglevel = ${logging.level}
  log-dead-letters = ${logging.dead-letters}

  extensions = ["akka.contrib.pattern.ClusterReceptionistExtension"]

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      fsm = ${logging.fsm}
      receive = ${logging.receive}
      unhandled = ${logging.unhandled}
    }
  }

  remote {
    log-sent-messages = ${logging.remote}
    log-received-messages = ${logging.remote}
    log-remote-lifecycle-events = ${logging.remote}
    netty.tcp {
      hostname = ${?APP_ADDR}
      port = 0
    }
  }

  cluster {
    log-info = ${logging.cluster}
    auto-down-unreachable-after = 10s # FIXME: should we really be auto-downing?
    min-nr-of-members = 3
    retry = 10s
    roles = [ ${?ROLES} ]
  }

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }
}

cassandra-journal {
  contact-points = [ ${?JOURNAL} ]
}

cassandra-snapshot-store {
  contact-points = [ ${?SNAPSHOT} ]
}

etcd {
  url = ${?ETCD_URL}
}
