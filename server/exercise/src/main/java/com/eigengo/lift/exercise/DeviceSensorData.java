package com.eigengo.lift.exercise;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deviceSensorData.proto

public final class DeviceSensorData {
  private DeviceSensorData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MultipleDeviceSensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MultipleDeviceSensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    java.util.List<DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData> 
        getSingleDeviceSensorDataList();
    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData getSingleDeviceSensorData(int index);
    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    int getSingleDeviceSensorDataCount();
    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    java.util.List<? extends DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder> 
        getSingleDeviceSensorDataOrBuilderList();
    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder getSingleDeviceSensorDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MultipleDeviceSensorData}
   */
  public static final class MultipleDeviceSensorData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MultipleDeviceSensorData)
      MultipleDeviceSensorDataOrBuilder {
    // Use MultipleDeviceSensorData.newBuilder() to construct.
    private MultipleDeviceSensorData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MultipleDeviceSensorData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MultipleDeviceSensorData defaultInstance;
    public static MultipleDeviceSensorData getDefaultInstance() {
      return defaultInstance;
    }

    public MultipleDeviceSensorData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MultipleDeviceSensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                singleDeviceSensorData_ = new java.util.ArrayList<DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData>();
                mutable_bitField0_ |= 0x00000001;
              }
              singleDeviceSensorData_.add(input.readMessage(DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          singleDeviceSensorData_ = java.util.Collections.unmodifiableList(singleDeviceSensorData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DeviceSensorData.internal_static_MultipleDeviceSensorData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DeviceSensorData.internal_static_MultipleDeviceSensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DeviceSensorData.MultipleDeviceSensorData.class, DeviceSensorData.MultipleDeviceSensorData.Builder.class);
    }

    public static com.google.protobuf.Parser<MultipleDeviceSensorData> PARSER =
        new com.google.protobuf.AbstractParser<MultipleDeviceSensorData>() {
      public MultipleDeviceSensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultipleDeviceSensorData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MultipleDeviceSensorData> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code MultipleDeviceSensorData.Source}
     */
    public enum Source
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HEAD = 0;</code>
       */
      HEAD(0, 0),
      /**
       * <code>NECK = 1;</code>
       */
      NECK(1, 1),
      /**
       * <code>SHOULDER = 2;</code>
       */
      SHOULDER(2, 2),
      /**
       * <code>CHEST = 3;</code>
       */
      CHEST(3, 3),
      /**
       * <code>ARM = 4;</code>
       */
      ARM(4, 4),
      /**
       * <code>FOREARM = 5;</code>
       */
      FOREARM(5, 5),
      /**
       * <code>HAND = 6;</code>
       */
      HAND(6, 6),
      /**
       * <code>WRIST = 7;</code>
       */
      WRIST(7, 7),
      /**
       * <code>WAIST = 8;</code>
       */
      WAIST(8, 8),
      /**
       * <code>HIP = 9;</code>
       */
      HIP(9, 9),
      /**
       * <code>THIGH = 10;</code>
       */
      THIGH(10, 10),
      /**
       * <code>CALF = 11;</code>
       */
      CALF(11, 11),
      /**
       * <code>ANKLE = 12;</code>
       */
      ANKLE(12, 12),
      /**
       * <code>FOOT = 13;</code>
       */
      FOOT(13, 13),
      ;

      /**
       * <code>HEAD = 0;</code>
       */
      public static final int HEAD_VALUE = 0;
      /**
       * <code>NECK = 1;</code>
       */
      public static final int NECK_VALUE = 1;
      /**
       * <code>SHOULDER = 2;</code>
       */
      public static final int SHOULDER_VALUE = 2;
      /**
       * <code>CHEST = 3;</code>
       */
      public static final int CHEST_VALUE = 3;
      /**
       * <code>ARM = 4;</code>
       */
      public static final int ARM_VALUE = 4;
      /**
       * <code>FOREARM = 5;</code>
       */
      public static final int FOREARM_VALUE = 5;
      /**
       * <code>HAND = 6;</code>
       */
      public static final int HAND_VALUE = 6;
      /**
       * <code>WRIST = 7;</code>
       */
      public static final int WRIST_VALUE = 7;
      /**
       * <code>WAIST = 8;</code>
       */
      public static final int WAIST_VALUE = 8;
      /**
       * <code>HIP = 9;</code>
       */
      public static final int HIP_VALUE = 9;
      /**
       * <code>THIGH = 10;</code>
       */
      public static final int THIGH_VALUE = 10;
      /**
       * <code>CALF = 11;</code>
       */
      public static final int CALF_VALUE = 11;
      /**
       * <code>ANKLE = 12;</code>
       */
      public static final int ANKLE_VALUE = 12;
      /**
       * <code>FOOT = 13;</code>
       */
      public static final int FOOT_VALUE = 13;


      public final int getNumber() { return value; }

      public static Source valueOf(int value) {
        switch (value) {
          case 0: return HEAD;
          case 1: return NECK;
          case 2: return SHOULDER;
          case 3: return CHEST;
          case 4: return ARM;
          case 5: return FOREARM;
          case 6: return HAND;
          case 7: return WRIST;
          case 8: return WAIST;
          case 9: return HIP;
          case 10: return THIGH;
          case 11: return CALF;
          case 12: return ANKLE;
          case 13: return FOOT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Source>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Source>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Source>() {
              public Source findValueByNumber(int number) {
                return Source.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return DeviceSensorData.MultipleDeviceSensorData.getDescriptor().getEnumTypes().get(0);
      }

      private static final Source[] VALUES = values();

      public static Source valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Source(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MultipleDeviceSensorData.Source)
    }

    public interface SingleDeviceSensorDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:MultipleDeviceSensorData.SingleDeviceSensorData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required .MultipleDeviceSensorData.Source source = 1;</code>
       */
      boolean hasSource();
      /**
       * <code>required .MultipleDeviceSensorData.Source source = 1;</code>
       */
      DeviceSensorData.MultipleDeviceSensorData.Source getSource();

      /**
       * <code>required bytes data = 2;</code>
       */
      boolean hasData();
      /**
       * <code>required bytes data = 2;</code>
       */
      com.google.protobuf.ByteString getData();
    }
    /**
     * Protobuf type {@code MultipleDeviceSensorData.SingleDeviceSensorData}
     */
    public static final class SingleDeviceSensorData extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:MultipleDeviceSensorData.SingleDeviceSensorData)
        SingleDeviceSensorDataOrBuilder {
      // Use SingleDeviceSensorData.newBuilder() to construct.
      private SingleDeviceSensorData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SingleDeviceSensorData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SingleDeviceSensorData defaultInstance;
      public static SingleDeviceSensorData getDefaultInstance() {
        return defaultInstance;
      }

      public SingleDeviceSensorData getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SingleDeviceSensorData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                DeviceSensorData.MultipleDeviceSensorData.Source value = DeviceSensorData.MultipleDeviceSensorData.Source.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  source_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                data_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DeviceSensorData.internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DeviceSensorData.internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.class, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder.class);
      }

      public static com.google.protobuf.Parser<SingleDeviceSensorData> PARSER =
          new com.google.protobuf.AbstractParser<SingleDeviceSensorData>() {
        public SingleDeviceSensorData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SingleDeviceSensorData(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SingleDeviceSensorData> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SOURCE_FIELD_NUMBER = 1;
      private DeviceSensorData.MultipleDeviceSensorData.Source source_;
      /**
       * <code>required .MultipleDeviceSensorData.Source source = 1;</code>
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .MultipleDeviceSensorData.Source source = 1;</code>
       */
      public DeviceSensorData.MultipleDeviceSensorData.Source getSource() {
        return source_;
      }

      public static final int DATA_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString data_;
      /**
       * <code>required bytes data = 2;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes data = 2;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }

      private void initFields() {
        source_ = DeviceSensorData.MultipleDeviceSensorData.Source.HEAD;
        data_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasSource()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasData()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, source_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, data_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, source_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, data_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code MultipleDeviceSensorData.SingleDeviceSensorData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:MultipleDeviceSensorData.SingleDeviceSensorData)
          DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return DeviceSensorData.internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return DeviceSensorData.internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.class, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder.class);
        }

        // Construct using DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          source_ = DeviceSensorData.MultipleDeviceSensorData.Source.HEAD;
          bitField0_ = (bitField0_ & ~0x00000001);
          data_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return DeviceSensorData.internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_descriptor;
        }

        public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData getDefaultInstanceForType() {
          return DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.getDefaultInstance();
        }

        public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData build() {
          DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData buildPartial() {
          DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData result = new DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.source_ = source_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData) {
            return mergeFrom((DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData other) {
          if (other == DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.getDefaultInstance()) return this;
          if (other.hasSource()) {
            setSource(other.getSource());
          }
          if (other.hasData()) {
            setData(other.getData());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasSource()) {
            
            return false;
          }
          if (!hasData()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private DeviceSensorData.MultipleDeviceSensorData.Source source_ = DeviceSensorData.MultipleDeviceSensorData.Source.HEAD;
        /**
         * <code>required .MultipleDeviceSensorData.Source source = 1;</code>
         */
        public boolean hasSource() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .MultipleDeviceSensorData.Source source = 1;</code>
         */
        public DeviceSensorData.MultipleDeviceSensorData.Source getSource() {
          return source_;
        }
        /**
         * <code>required .MultipleDeviceSensorData.Source source = 1;</code>
         */
        public Builder setSource(DeviceSensorData.MultipleDeviceSensorData.Source value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          source_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required .MultipleDeviceSensorData.Source source = 1;</code>
         */
        public Builder clearSource() {
          bitField0_ = (bitField0_ & ~0x00000001);
          source_ = DeviceSensorData.MultipleDeviceSensorData.Source.HEAD;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes data = 2;</code>
         */
        public boolean hasData() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bytes data = 2;</code>
         */
        public com.google.protobuf.ByteString getData() {
          return data_;
        }
        /**
         * <code>required bytes data = 2;</code>
         */
        public Builder setData(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          data_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes data = 2;</code>
         */
        public Builder clearData() {
          bitField0_ = (bitField0_ & ~0x00000002);
          data_ = getDefaultInstance().getData();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:MultipleDeviceSensorData.SingleDeviceSensorData)
      }

      static {
        defaultInstance = new SingleDeviceSensorData(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:MultipleDeviceSensorData.SingleDeviceSensorData)
    }

    public static final int SINGLEDEVICESENSORDATA_FIELD_NUMBER = 1;
    private java.util.List<DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData> singleDeviceSensorData_;
    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    public java.util.List<DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData> getSingleDeviceSensorDataList() {
      return singleDeviceSensorData_;
    }
    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    public java.util.List<? extends DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder> 
        getSingleDeviceSensorDataOrBuilderList() {
      return singleDeviceSensorData_;
    }
    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    public int getSingleDeviceSensorDataCount() {
      return singleDeviceSensorData_.size();
    }
    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData getSingleDeviceSensorData(int index) {
      return singleDeviceSensorData_.get(index);
    }
    /**
     * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
     */
    public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder getSingleDeviceSensorDataOrBuilder(
        int index) {
      return singleDeviceSensorData_.get(index);
    }

    private void initFields() {
      singleDeviceSensorData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getSingleDeviceSensorDataCount(); i++) {
        if (!getSingleDeviceSensorData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < singleDeviceSensorData_.size(); i++) {
        output.writeMessage(1, singleDeviceSensorData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < singleDeviceSensorData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, singleDeviceSensorData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static DeviceSensorData.MultipleDeviceSensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DeviceSensorData.MultipleDeviceSensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DeviceSensorData.MultipleDeviceSensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DeviceSensorData.MultipleDeviceSensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DeviceSensorData.MultipleDeviceSensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DeviceSensorData.MultipleDeviceSensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static DeviceSensorData.MultipleDeviceSensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static DeviceSensorData.MultipleDeviceSensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static DeviceSensorData.MultipleDeviceSensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static DeviceSensorData.MultipleDeviceSensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DeviceSensorData.MultipleDeviceSensorData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MultipleDeviceSensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MultipleDeviceSensorData)
        DeviceSensorData.MultipleDeviceSensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DeviceSensorData.internal_static_MultipleDeviceSensorData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DeviceSensorData.internal_static_MultipleDeviceSensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DeviceSensorData.MultipleDeviceSensorData.class, DeviceSensorData.MultipleDeviceSensorData.Builder.class);
      }

      // Construct using DeviceSensorData.MultipleDeviceSensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSingleDeviceSensorDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (singleDeviceSensorDataBuilder_ == null) {
          singleDeviceSensorData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          singleDeviceSensorDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DeviceSensorData.internal_static_MultipleDeviceSensorData_descriptor;
      }

      public DeviceSensorData.MultipleDeviceSensorData getDefaultInstanceForType() {
        return DeviceSensorData.MultipleDeviceSensorData.getDefaultInstance();
      }

      public DeviceSensorData.MultipleDeviceSensorData build() {
        DeviceSensorData.MultipleDeviceSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public DeviceSensorData.MultipleDeviceSensorData buildPartial() {
        DeviceSensorData.MultipleDeviceSensorData result = new DeviceSensorData.MultipleDeviceSensorData(this);
        int from_bitField0_ = bitField0_;
        if (singleDeviceSensorDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            singleDeviceSensorData_ = java.util.Collections.unmodifiableList(singleDeviceSensorData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.singleDeviceSensorData_ = singleDeviceSensorData_;
        } else {
          result.singleDeviceSensorData_ = singleDeviceSensorDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DeviceSensorData.MultipleDeviceSensorData) {
          return mergeFrom((DeviceSensorData.MultipleDeviceSensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DeviceSensorData.MultipleDeviceSensorData other) {
        if (other == DeviceSensorData.MultipleDeviceSensorData.getDefaultInstance()) return this;
        if (singleDeviceSensorDataBuilder_ == null) {
          if (!other.singleDeviceSensorData_.isEmpty()) {
            if (singleDeviceSensorData_.isEmpty()) {
              singleDeviceSensorData_ = other.singleDeviceSensorData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSingleDeviceSensorDataIsMutable();
              singleDeviceSensorData_.addAll(other.singleDeviceSensorData_);
            }
            onChanged();
          }
        } else {
          if (!other.singleDeviceSensorData_.isEmpty()) {
            if (singleDeviceSensorDataBuilder_.isEmpty()) {
              singleDeviceSensorDataBuilder_.dispose();
              singleDeviceSensorDataBuilder_ = null;
              singleDeviceSensorData_ = other.singleDeviceSensorData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              singleDeviceSensorDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSingleDeviceSensorDataFieldBuilder() : null;
            } else {
              singleDeviceSensorDataBuilder_.addAllMessages(other.singleDeviceSensorData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSingleDeviceSensorDataCount(); i++) {
          if (!getSingleDeviceSensorData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        DeviceSensorData.MultipleDeviceSensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (DeviceSensorData.MultipleDeviceSensorData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData> singleDeviceSensorData_ =
        java.util.Collections.emptyList();
      private void ensureSingleDeviceSensorDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          singleDeviceSensorData_ = new java.util.ArrayList<DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData>(singleDeviceSensorData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder> singleDeviceSensorDataBuilder_;

      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public java.util.List<DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData> getSingleDeviceSensorDataList() {
        if (singleDeviceSensorDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(singleDeviceSensorData_);
        } else {
          return singleDeviceSensorDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public int getSingleDeviceSensorDataCount() {
        if (singleDeviceSensorDataBuilder_ == null) {
          return singleDeviceSensorData_.size();
        } else {
          return singleDeviceSensorDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData getSingleDeviceSensorData(int index) {
        if (singleDeviceSensorDataBuilder_ == null) {
          return singleDeviceSensorData_.get(index);
        } else {
          return singleDeviceSensorDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public Builder setSingleDeviceSensorData(
          int index, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData value) {
        if (singleDeviceSensorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSingleDeviceSensorDataIsMutable();
          singleDeviceSensorData_.set(index, value);
          onChanged();
        } else {
          singleDeviceSensorDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public Builder setSingleDeviceSensorData(
          int index, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder builderForValue) {
        if (singleDeviceSensorDataBuilder_ == null) {
          ensureSingleDeviceSensorDataIsMutable();
          singleDeviceSensorData_.set(index, builderForValue.build());
          onChanged();
        } else {
          singleDeviceSensorDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public Builder addSingleDeviceSensorData(DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData value) {
        if (singleDeviceSensorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSingleDeviceSensorDataIsMutable();
          singleDeviceSensorData_.add(value);
          onChanged();
        } else {
          singleDeviceSensorDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public Builder addSingleDeviceSensorData(
          int index, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData value) {
        if (singleDeviceSensorDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSingleDeviceSensorDataIsMutable();
          singleDeviceSensorData_.add(index, value);
          onChanged();
        } else {
          singleDeviceSensorDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public Builder addSingleDeviceSensorData(
          DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder builderForValue) {
        if (singleDeviceSensorDataBuilder_ == null) {
          ensureSingleDeviceSensorDataIsMutable();
          singleDeviceSensorData_.add(builderForValue.build());
          onChanged();
        } else {
          singleDeviceSensorDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public Builder addSingleDeviceSensorData(
          int index, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder builderForValue) {
        if (singleDeviceSensorDataBuilder_ == null) {
          ensureSingleDeviceSensorDataIsMutable();
          singleDeviceSensorData_.add(index, builderForValue.build());
          onChanged();
        } else {
          singleDeviceSensorDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public Builder addAllSingleDeviceSensorData(
          java.lang.Iterable<? extends DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData> values) {
        if (singleDeviceSensorDataBuilder_ == null) {
          ensureSingleDeviceSensorDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, singleDeviceSensorData_);
          onChanged();
        } else {
          singleDeviceSensorDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public Builder clearSingleDeviceSensorData() {
        if (singleDeviceSensorDataBuilder_ == null) {
          singleDeviceSensorData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          singleDeviceSensorDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public Builder removeSingleDeviceSensorData(int index) {
        if (singleDeviceSensorDataBuilder_ == null) {
          ensureSingleDeviceSensorDataIsMutable();
          singleDeviceSensorData_.remove(index);
          onChanged();
        } else {
          singleDeviceSensorDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder getSingleDeviceSensorDataBuilder(
          int index) {
        return getSingleDeviceSensorDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder getSingleDeviceSensorDataOrBuilder(
          int index) {
        if (singleDeviceSensorDataBuilder_ == null) {
          return singleDeviceSensorData_.get(index);  } else {
          return singleDeviceSensorDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public java.util.List<? extends DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder> 
           getSingleDeviceSensorDataOrBuilderList() {
        if (singleDeviceSensorDataBuilder_ != null) {
          return singleDeviceSensorDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(singleDeviceSensorData_);
        }
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder addSingleDeviceSensorDataBuilder() {
        return getSingleDeviceSensorDataFieldBuilder().addBuilder(
            DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.getDefaultInstance());
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder addSingleDeviceSensorDataBuilder(
          int index) {
        return getSingleDeviceSensorDataFieldBuilder().addBuilder(
            index, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.getDefaultInstance());
      }
      /**
       * <code>repeated .MultipleDeviceSensorData.SingleDeviceSensorData singleDeviceSensorData = 1;</code>
       */
      public java.util.List<DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder> 
           getSingleDeviceSensorDataBuilderList() {
        return getSingleDeviceSensorDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder> 
          getSingleDeviceSensorDataFieldBuilder() {
        if (singleDeviceSensorDataBuilder_ == null) {
          singleDeviceSensorDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorData.Builder, DeviceSensorData.MultipleDeviceSensorData.SingleDeviceSensorDataOrBuilder>(
                  singleDeviceSensorData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          singleDeviceSensorData_ = null;
        }
        return singleDeviceSensorDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MultipleDeviceSensorData)
    }

    static {
      defaultInstance = new MultipleDeviceSensorData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MultipleDeviceSensorData)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MultipleDeviceSensorData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MultipleDeviceSensorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026deviceSensorData.proto\"\347\002\n\030MultipleDev" +
      "iceSensorData\022P\n\026singleDeviceSensorData\030" +
      "\001 \003(\01320.MultipleDeviceSensorData.SingleD" +
      "eviceSensorData\032X\n\026SingleDeviceSensorDat" +
      "a\0220\n\006source\030\001 \002(\0162 .MultipleDeviceSensor" +
      "Data.Source\022\014\n\004data\030\002 \002(\014\"\236\001\n\006Source\022\010\n\004" +
      "HEAD\020\000\022\010\n\004NECK\020\001\022\014\n\010SHOULDER\020\002\022\t\n\005CHEST\020" +
      "\003\022\007\n\003ARM\020\004\022\013\n\007FOREARM\020\005\022\010\n\004HAND\020\006\022\t\n\005WRI" +
      "ST\020\007\022\t\n\005WAIST\020\010\022\007\n\003HIP\020\t\022\t\n\005THIGH\020\n\022\010\n\004C" +
      "ALF\020\013\022\t\n\005ANKLE\020\014\022\010\n\004FOOT\020\r"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_MultipleDeviceSensorData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MultipleDeviceSensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MultipleDeviceSensorData_descriptor,
        new java.lang.String[] { "SingleDeviceSensorData", });
    internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_descriptor =
      internal_static_MultipleDeviceSensorData_descriptor.getNestedTypes().get(0);
    internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MultipleDeviceSensorData_SingleDeviceSensorData_descriptor,
        new java.lang.String[] { "Source", "Data", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
